syntax = "proto3";
package models.grpc.usermgmt;
option go_package = "github.com/bptlab/cepta/models/grpc/usermgmt";

import "models/internal/types/users.proto";
import "models/internal/types/result.proto";
import "models/internal/types/ids.proto";

service UserManagement {
  rpc GetUser(GetUserRequest) returns (models.internal.types.User) {}
  rpc GetUserCount(models.internal.types.Empty) returns (UserCount) {}

  rpc AddTransport(UserTransport) returns (models.internal.types.Empty) {}
  rpc RemoveTransport(UserTransport) returns (models.internal.types.Empty) {}

  rpc AddUser(AddUserRequest) returns (models.internal.types.User) {}
  rpc RemoveUser(RemoveUserRequest) returns (models.internal.types.Empty) {}
  rpc UpdateUser(UpdateUserRequest) returns (models.internal.types.Empty) {}

  // TODO: Private rpc calls
  rpc GetUsers (models.internal.types.Empty) returns (stream models.internal.types.User) {}
  rpc GetSubscribersForTransport(GetSubscribersRequest) returns (stream models.internal.types.User) {}
}

message UserCount {
  int64 value = 1;
}

message GetUserRequest {
  models.internal.types.UserID user_id = 1;
  string email = 2;
}

message GetSubscribersRequest {
  models.internal.types.CeptaTransportID transport_id = 3;
}

message UpdateUserRequest {
  models.internal.types.InternalUser user = 1;
}

message UserTransport {
  models.internal.types.UserID user_id = 1;
  models.internal.types.CeptaTransportID transport_id = 2;
}

message AddUserRequest {
  models.internal.types.InternalUser user = 1;
}

message RemoveUserRequest {
  models.internal.types.UserID user_id = 1;
}
