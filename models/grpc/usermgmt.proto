syntax = "proto3";
package models.grpc.usermgmt;
option go_package = "github.com/bptlab/cepta/models/grpc/usermgmt";

import "models/types/transports.proto";
import "models/types/users.proto";
import "models/types/result.proto";

service UserManagement {
  rpc GetUser(GetUserRequest) returns (models.types.users.User) {}
  rpc UpdateUser(UpdateUserRequest) returns (models.types.result.Empty) {}
  // rpc AddTransport(models.types.transports.TransportID) returns (Success) {}
  // rpc RemoveTrain(UserIdTrainIdInput) returns (Success) {}
  rpc GetUserCount(models.types.result.Empty) returns (UserCount) {}
  rpc AddUser(AddUserRequest) returns (models.types.users.User) {}
  rpc RemoveUser(RemoveUserRequest) returns (models.types.result.Empty) {}
  rpc GetAllUser (models.types.result.Empty) returns (stream models.types.users.User) {}
}

message UserCount {
  int64 value = 1;
}

message GetUserRequest {
  models.types.users.UserID user_id = 1;
  string email = 2;
  models.types.transports.TransportID train_id = 3;
}

message UpdateUserRequest {
  models.types.users.InternalUser user = 1;
}

message AddTransportRequest {
  models.types.transports.Transport transport = 1;
  string email = 2;
}

message AddUserRequest {
  models.types.users.InternalUser user = 1;
}

message RemoveUserRequest {
  models.types.users.UserID user_id = 1;
}
