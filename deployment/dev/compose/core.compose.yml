version: "3.6"
services:
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - ${CEPTA_ZOOKEEPER_PORT}:2181
    volumes:
      - zookeeper_data:/bitnami
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka:
    image: bitnami/kafka:2.3.0
    ports:
      - ${CEPTA_KAFKA_PORT}:9092
      - 29092:29092
    volumes:
      - kafka_data:/bitnami
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:${CEPTA_ZOOKEEPER_PORT}
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
    depends_on:
      - zookeeper

  kafka-manager:
    image: sheepkiller/kafka-manager
    ports:
      - ${CEPTA_KAFKA_MANAGER_PORT}:9000
    environment:
      ZK_HOSTS: zookeeper:${CEPTA_ZOOKEEPER_PORT}
      KM_VERSION: 2.3.0

  kafdrop:
    image: thomsch98/kafdrop
    ports:
      - ${CEPTA_KAFDROP_PORT}:9001
    environment:
      ZK_HOSTS: zookeeper:${CEPTA_ZOOKEEPER_PORT}
      LISTEN: ${CEPTA_KAFDROP_PORT}

  flink-jobmanager:
    image: flink:latest
    expose:
      - 6123
    ports:
      - ${CEPTA_FLINK_JOBMANAGER_PORT}:6123
      - ${CEPTA_FLINK_JOBMANAGER_UI_PORT}:8081
    command: jobmanager
    environment:
      JOB_MANAGER_RPC_ADDRESS: flink-jobmanager

  flink-taskmanager:
    image: flink:latest
    expose:
      - 6121
      - 6122
    #ports:
    #  - ${CEPTA_FLINK_TASKMANAGER_PORT_1}:6121
    #  - ${CEPTA_FLINK_TASKMANAGER_PORT_2}:6122
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      JOB_MANAGER_RPC_ADDRESS: flink-jobmanager

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_USER: postgres
      # Secrets might be a good option but the host value is problematic (must be localhost)
      # POSTGRES_PASSWORD_FILE: /run/secrets/postgres-passwd
      # Use volumes for persistence but avoid during changes of configuration
      # volumes:
      # - ./dbdata:/var/lib/postgresql/data
    secrets:
      - source: postgres_passwd
        target: postgres-passwd
    expose:
      - 5432
    ports:
      - ${CEPTA_POSTGRES_PORT}:5432
    logging:
      # Disable logging
      driver: none

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - postgres
    restart: always
    environment:
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - ${CEPTA_PGADMIN_PORT}:80
    volumes:
      - ./pgadmin/pgadmin-servers.json:/pgadmin4/servers.json
      - ../../common/exec-win-compat.sh:/exec-win-compat.sh
      - ./pgadmin/pgadmin-entrypoint.sh:/entrypoint.sh
      - ./pgadmin/pgpass.txt:/.pgpass
    # entrypoint: "dos2unix /entrypoint.sh && /bin/sh /entrypoint.sh"
    entrypoint: "/bin/sh /exec-win-compat.sh /entrypoint.sh"
    #logging:
      # Disable logging
    #  driver: none

  osiris:
    build:
      context: ../../../
      dockerfile: deployment/common/java.exec.dockerfile
      args:
        MODULE: anubis
    depends_on:
      - kafka
    command:
      - --server.port=8082
    ports:
      - ${CEPTA_WEBUI_BACKEND_PORT}:8082

  core:
    build:
      context: ../../../
      dockerfile: deployment/common/java.exec.dockerfile
      args:
        MODULE: core
    command:
      - --broker=kafka:9092
    depends_on:
      - flink-jobmanager
      - flink-taskmanager
      - kafka
      - traindatareplayer

  traindatareplayer:
    build:
      context: ../../../
      dockerfile: deployment/common/java.exec.dockerfile
      args:
        MODULE: producers/train-replayer
    depends_on:
      - kafka
      - postgres
    network_mode: host
    command:
      - --broker localhost:29092
      - --grpc-port 9000
      - --host localhost
      - --db-port ${CEPTA_POSTGRES_PORT}
      # - --broker kafka:9092 --grpc-port 9000
    ports:
      - ${CEPTA_PRODUCER_TRAIN_DATA_GRPC_PORT}:9000

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  postgres_data:
    driver: local

secrets:
  postgres_passwd:
    file: ./pgadmin/pgpass.txt
