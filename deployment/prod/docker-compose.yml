version: "3.6"
services:
  anubis:
    image: ceptaorg/anubis:${CEPTA_VERSION}
    expose:
      - 80
    ports:
      - 9001:80

  mongodb:
    image: "mongo"
    volumes:
        - mongodb_data:/data/db
    expose:
        - 27017
    environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: example

  zookeeper:
    image: bitnami/zookeeper:latest
    expose:
      - 2181
    # Enable volume for persistence
    # volumes:
    #   - zookeeper_data:/bitnami
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka:
    image: romnn/jmxkafka
    expose:
      - 9092
      - 29092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT:  zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:29092
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OPTS: -javaagent:/usr/app/jmx_prometheus_javaagent.jar=7072:/usr/app/prom-jmx-agent-config.yml
    depends_on:
      - zookeeper

  flink-jobmanager:
    image: flink:latest
    expose:
      - 6123
      - 8081
    command: jobmanager
    environment:
      JOB_MANAGER_RPC_ADDRESS: flink-jobmanager

  flink-taskmanager:
    image: flink:latest
    expose:
      - 6121
      - 6122
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      JOB_MANAGER_RPC_ADDRESS: flink-jobmanager

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_USER: postgres
      # Secrets might be a good option but the host value is problematic (must be localhost)
      # POSTGRES_PASSWORD_FILE: /run/secrets/postgres-passwd
      # Use volumes for persistence but avoid during changes of configuration
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    secrets:
      - source: postgres_passwd
        target: postgres-passwd
    expose:
      - 5432
    logging:
      # Disable logging
      driver: none

  core:
    image: ceptaorg/core:${CEPTA_VERSION}
    command:
      - --broker=kafka:9092
    depends_on:
      - flink-jobmanager
      - flink-taskmanager
      - kafka
      - replayer

  replayer:
    image: ceptaorg/replayer:${CEPTA_VERSION}
    depends_on:
      - kafka
      - postgres
    expose:
      - 9000
    command:
      - --broker=kafka:9092
      - --grpc-port=9000
      - --postgres-host=postgres
      - --postgres-port=5432
      - --must-match='train_id=47298333'

  notification:
    image: ceptaorg/notification:${CEPTA_VERSION}
    command:
      - --brokers=kafka:9092
    expose: 
      - 80
    depends_on:
      - flink-jobmanager
      - flink-taskmanager
      - kafka
      - replayer

  auth:
    image: ceptaorg/auth:${CEPTA_VERSION}
    expose: 
      - 80
    volumes:
      - ../../keys/sample/auth.key:/etc/keys/sign.key
      - ../../keys/sample/auth.jwk.json:/etc/keys/jwks.json
    environment:
      KAFKA_BROKERS: kafka:9092
      MONGODB_HOST: mongodb
      MONGODB_PORT: 27017
      SIGNING_KEY: /etc/keys/sign.key
      JWKS_JSON: /etc/keys/jwks.json
    depends_on:
      - mongodb

  usermgmt:
    image: ceptaorg/usermgmt:${CEPTA_VERSION}
    expose: 
      - 80
    environment:
      KAFKA_BROKERS: kafka:9092
      MONGODB_HOST: mongodb
      MONGODB_PORT: 27017
      INITIAL_EMAIL: cepta@cepta.org
      INITIAL_PASSWORD: cepta
    depends_on:
      - mongodb

  envoy:
    image: envoyproxy/envoy:v1.14.1
    ports:
      - ${CEPTA_ENVOY_ADMIN_PORT:-9901}:9901
      - ${CEPTA_ENVOY_INGRESS_PORT:-80}:80
      - ${CEPTA_ENVOY_GRPC_PORT:-90}:81
    volumes:
      - ../../keys/sample/auth.jwk.json:/etc/envoy/jwks/jwks.json
      - ./envoy.yaml:/etc/envoy/envoy.yaml.tmpl:ro
      - ../common/prepare-envoy.sh:/prepare.sh:ro
    entrypoint: ["bin/sh", "/prepare.sh"]
    env_file: .env
    command:
      - envoy
      - -c /etc/envoy/envoy.yaml

  postgres_exporter:
    image: wrouesnel/postgres_exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:example@postgres:5432/postgres?sslmode=disable"
      # DATA_SOURCE_PASS: example
      # DATA_SOURCE_USER: postgres
      # DATA_SOURCE_URI: postgresql://postgres:5432/postgres?sslmode=disable

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ../../deployment/common/prometheus/prometheus.config.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.retention=12h
    expose:
      - 9090

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=pass
    depends_on:
      - prometheus
    expose:
      - 3000
    volumes:
      - ../../deployment/common/grafana/provisioning:/etc/grafana/provisioning
      - ../../deployment/common/grafana/config.ini:/etc/grafana/config.ini
      - ../../deployment/common/grafana/dashboards:/var/lib/grafana/dashboards

  rabbitmq:
    image: rabbitmq:3.8.1-management
      # environment:
      # RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      # RABBITMQ_DEFAULT_USER: "rabbitmq"
    # RABBITMQ_DEFAULT_PASS: "rabbitmq"
    # RABBITMQ_DEFAULT_VHOST: "/"
    expose:
      - 61613
    volumes:
      - ../common/rabbitmq/rmq_enabled_plugins.txt:/etc/rabbitmq/enabled_plugins
      # - ./rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro
      # - ./data:/var/lib/rabbitmq:rw
      # - ./definitions.json:/opt/definitions.json:ro

volumes:
  # Use these if you need data to persist for kafka and zookeeper across restarts
  # zookeeper_data:
  #   driver: local
  # kafka_data:
  #   driver: local
  postgres_data:
    driver: local
  mongodb_data:
    driver: local
  prometheus_data: {}
  grafana_data: {}

secrets:
  postgres_passwd:
    file: ../../deployment/common/pgadmin/pgpass.txt