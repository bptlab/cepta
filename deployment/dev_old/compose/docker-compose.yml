version: "3.6"
services:
  cockpit:
    build:
      context: ../cockpit
    # network_mode: host
    ports:
      - 80:3000
    env_file: .env
  flink-jobmanager:
    image: flink:latest
    # network_mode: host
    expose:
      - 6123
    ports:
      - ${CEPTA_FLINK_JOBMANAGER_PORT}:6123
      - ${CEPTA_FLINK_JOBMANAGER_UI_PORT}:8081
    command: jobmanager
    environment:
      # Use "flink-jobmanager" for bridged networks, "localhost" for network mode
      JOB_MANAGER_RPC_ADDRESS: flink-jobmanager

  flink-taskmanager:
    image: flink:latest
    # network_mode: host
    expose:
      - 6121
      - 6122
    #ports:
    #  - ${CEPTA_FLINK_TASKMANAGER_PORT_1}:6121
    #  - ${CEPTA_FLINK_TASKMANAGER_PORT_2}:6122
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      # Use "flink-jobmanager" for bridged networks, "localhost" for network mode
      JOB_MANAGER_RPC_ADDRESS: flink-jobmanager

  zookeeper:
    image: bitnami/zookeeper:latest
    # network_mode: host
    ports:
      - ${CEPTA_ZOOKEEPER_PORT}:2181
    volumes:
      - zookeeper_data:/bitnami
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka:
    image: bitnami/kafka:2.3.0
    # network_mode: host
    ports:
      - ${CEPTA_KAFKA_PORT}:9092
    volumes:
      - kafka_data:/bitnami
    environment:
      # Use "zookeeper:2181" for bridged networks, "locahost:2181" for network mode
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:${CEPTA_ZOOKEEPER_PORT}
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper

  kafka-manager:
    image: sheepkiller/kafka-manager
    # network_mode: host
    ports:
      - ${CEPTA_KAFKA_MANAGER_PORT}:9000
    environment:
      # Use "zookeeper:2181" for bridged networks, "locahost:2181" for network mode
      ZK_HOSTS: zookeeper:${CEPTA_ZOOKEEPER_PORT}
      KM_VERSION: 2.3.0

  kafdrop:
    image: thomsch98/kafdrop
    # network_mode: host
    ports:
      - ${CEPTA_KAFDROP_PORT}:9001
    environment:
      # Use "zookeeper:2181" for bridged networks, "locahost:2181" for network mode
      ZK_HOSTS: zookeeper:${CEPTA_ZOOKEEPER_PORT}
      LISTEN: ${CEPTA_KAFDROP_PORT}

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_USER: postgres
      # Secrets might be a good option but the host value is problematic (must be localhost)
      # POSTGRES_PASSWORD_FILE: /run/secrets/postgres-passwd
      # Use volumes for persistence but avoid during changes of configuration
      # volumes:
      # - ./dbdata:/var/lib/postgresql/data
    secrets:
      - source: postgres_passwd
        target: postgres-passwd
    expose:
      - 5432
    ports:
      - ${CEPTA_POSTGRES_PORT}:5432
    logging:
      # Disable logging
      driver: none

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - postgres
    restart: always
    environment:
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - ${CEPTA_PGADMIN_PORT}:80
    volumes:
      - ./pgadmin/pgadmin-servers.json:/pgadmin4/servers.json
      - ./pgadmin/pgadmin-entrypoint.sh:/entrypoint.sh
      - ./pgadmin/pgpass.txt:/.pgpass
    entrypoint: "/bin/sh /entrypoint.sh"
    logging:
      # Disable logging
      driver: none

secrets:
  postgres_passwd:
    file: ./pgadmin/pgpass.txt
volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local