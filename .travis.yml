dist: trusty
sudo: required
osx_image: xcode9.4
language: java

os:
  - linux
  - osx

env:
  - V=2.2.0

matrix:
  # It's ok to fail on osx.
  allow_failures:
    - os: osx
  # Don't wait for osx tests to finish.
  # Mark the test run green if the tests pass on linux.
  fast_finish: true

before_install:
  - OS=linux
  - ARCH=x86_64
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then OS=darwin; fi
  - GH_BASE="https://github.com/bazelbuild/bazel/releases/download/$V"
  - GH_ARTIFACT="bazel-$V-installer-$OS-$ARCH.sh"
  - CI_BASE="http://ci.bazel.io/job/Bazel/JAVA_VERSION=1.8,PLATFORM_NAME=$OS-$ARCH/lastSuccessfulBuild/artifact/output/ci"
  - CI_ARTIFACT="bazel--installer.sh"
  - URL="$GH_BASE/$GH_ARTIFACT"
  - if [[ "$V" == "HEAD" ]]; then CI_ARTIFACT="`wget -qO- $CI_BASE | grep -o 'bazel-[-_a-zA-Z0-9\.]*-installer.sh' | uniq`"; fi
  - if [[ "$V" == "HEAD" ]]; then URL="$CI_BASE/$CI_ARTIFACT"; fi
  - echo $URL
  - wget -O install.sh $URL
  - chmod +x install.sh
  - ./install.sh --user
  - rm -f install.sh

# services:
#   - docker

# before_script:
# Try to start pgadmin via docker
# As windows server cannot run linux docker containers we can only test this on linux
# - if [ "$TRAVIS_OS_NAME" = "linux" ]; then deployment/dev/devenv.sh -p test up -d pgadmin ; fi

script:
  # Test docker compose regressions
  # - if [ "$TRAVIS_OS_NAME" = "linux" ]; then docker ps | grep -q pgadmin ; fi
  # Check if the project builds successfully
  - bazel build //osiris/authentication && ./bazel-bin/osiris/authentication/linux_amd64_stripped/authentication --port 8080
  - bazel test :all --test_output=all
