/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.bptlab.cepta;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class PlannedTrainData extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final long serialVersionUID = 1515912763762445737L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PlannedTrainData\",\"namespace\":\"org.bptlab.cepta\",\"fields\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"train_id\",\"type\":\"int\"},{\"name\":\"location_id\",\"type\":\"int\"},{\"name\":\"planned_time\",\"type\":\"long\",\"logicaltype\":\"timestamp-millis\"},{\"name\":\"location_status\",\"type\":\"int\"},{\"name\":\"run_first_train_number\",\"type\":\"int\"},{\"name\":\"train_number\",\"type\":\"int\"},{\"name\":\"planned_departure_reference\",\"type\":\"long\",\"logicaltype\":\"timestamp-millis\"},{\"name\":\"planned_arrival_reference\",\"type\":\"long\",\"logicaltype\":\"timestamp-millis\"},{\"name\":\"train_operator_id\",\"type\":\"int\"},{\"name\":\"transfer_location_id\",\"type\":\"int\"},{\"name\":\"reporting_im_id\",\"type\":\"int\"},{\"name\":\"next_im_id\",\"type\":\"int\"},{\"name\":\"status\",\"type\":\"int\"},{\"name\":\"message_creation\",\"type\":\"int\",\"logicaltype\":\"date\"},{\"name\":\"original_train_number\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  public static SpecificData MODEL$ = new SpecificData();

  public static final BinaryMessageEncoder<PlannedTrainData> ENCODER =
      new BinaryMessageEncoder<PlannedTrainData>(MODEL$, SCHEMA$);

  public static final BinaryMessageDecoder<PlannedTrainData> DECODER =
      new BinaryMessageDecoder<PlannedTrainData>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<PlannedTrainData> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<PlannedTrainData> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<PlannedTrainData>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this PlannedTrainData to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a PlannedTrainData from a ByteBuffer. */
  public static PlannedTrainData fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public int id;
  @Deprecated public int train_id;
  @Deprecated public int location_id;
  @Deprecated public long planned_time;
  @Deprecated public int location_status;
  @Deprecated public int run_first_train_number;
  @Deprecated public int train_number;
  @Deprecated public long planned_departure_reference;
  @Deprecated public long planned_arrival_reference;
  @Deprecated public int train_operator_id;
  @Deprecated public int transfer_location_id;
  @Deprecated public int reporting_im_id;
  @Deprecated public int next_im_id;
  @Deprecated public int status;
  @Deprecated public int message_creation;
  @Deprecated public int original_train_number;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PlannedTrainData() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param train_id The new value for train_id
   * @param location_id The new value for location_id
   * @param planned_time The new value for planned_time
   * @param location_status The new value for location_status
   * @param run_first_train_number The new value for run_first_train_number
   * @param train_number The new value for train_number
   * @param planned_departure_reference The new value for planned_departure_reference
   * @param planned_arrival_reference The new value for planned_arrival_reference
   * @param train_operator_id The new value for train_operator_id
   * @param transfer_location_id The new value for transfer_location_id
   * @param reporting_im_id The new value for reporting_im_id
   * @param next_im_id The new value for next_im_id
   * @param status The new value for status
   * @param message_creation The new value for message_creation
   * @param original_train_number The new value for original_train_number
   */
  public PlannedTrainData(java.lang.Integer id, java.lang.Integer train_id, java.lang.Integer location_id, java.lang.Long planned_time, java.lang.Integer location_status, java.lang.Integer run_first_train_number, java.lang.Integer train_number, java.lang.Long planned_departure_reference, java.lang.Long planned_arrival_reference, java.lang.Integer train_operator_id, java.lang.Integer transfer_location_id, java.lang.Integer reporting_im_id, java.lang.Integer next_im_id, java.lang.Integer status, java.lang.Integer message_creation, java.lang.Integer original_train_number) {
    this.id = id;
    this.train_id = train_id;
    this.location_id = location_id;
    this.planned_time = planned_time;
    this.location_status = location_status;
    this.run_first_train_number = run_first_train_number;
    this.train_number = train_number;
    this.planned_departure_reference = planned_departure_reference;
    this.planned_arrival_reference = planned_arrival_reference;
    this.train_operator_id = train_operator_id;
    this.transfer_location_id = transfer_location_id;
    this.reporting_im_id = reporting_im_id;
    this.next_im_id = next_im_id;
    this.status = status;
    this.message_creation = message_creation;
    this.original_train_number = original_train_number;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return train_id;
    case 2: return location_id;
    case 3: return planned_time;
    case 4: return location_status;
    case 5: return run_first_train_number;
    case 6: return train_number;
    case 7: return planned_departure_reference;
    case 8: return planned_arrival_reference;
    case 9: return train_operator_id;
    case 10: return transfer_location_id;
    case 11: return reporting_im_id;
    case 12: return next_im_id;
    case 13: return status;
    case 14: return message_creation;
    case 15: return original_train_number;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Integer)value$; break;
    case 1: train_id = (java.lang.Integer)value$; break;
    case 2: location_id = (java.lang.Integer)value$; break;
    case 3: planned_time = (java.lang.Long)value$; break;
    case 4: location_status = (java.lang.Integer)value$; break;
    case 5: run_first_train_number = (java.lang.Integer)value$; break;
    case 6: train_number = (java.lang.Integer)value$; break;
    case 7: planned_departure_reference = (java.lang.Long)value$; break;
    case 8: planned_arrival_reference = (java.lang.Long)value$; break;
    case 9: train_operator_id = (java.lang.Integer)value$; break;
    case 10: transfer_location_id = (java.lang.Integer)value$; break;
    case 11: reporting_im_id = (java.lang.Integer)value$; break;
    case 12: next_im_id = (java.lang.Integer)value$; break;
    case 13: status = (java.lang.Integer)value$; break;
    case 14: message_creation = (java.lang.Integer)value$; break;
    case 15: original_train_number = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Integer getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Integer value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'train_id' field.
   * @return The value of the 'train_id' field.
   */
  public java.lang.Integer getTrainId() {
    return train_id;
  }

  /**
   * Sets the value of the 'train_id' field.
   * @param value the value to set.
   */
  public void setTrainId(java.lang.Integer value) {
    this.train_id = value;
  }

  /**
   * Gets the value of the 'location_id' field.
   * @return The value of the 'location_id' field.
   */
  public java.lang.Integer getLocationId() {
    return location_id;
  }

  /**
   * Sets the value of the 'location_id' field.
   * @param value the value to set.
   */
  public void setLocationId(java.lang.Integer value) {
    this.location_id = value;
  }

  /**
   * Gets the value of the 'planned_time' field.
   * @return The value of the 'planned_time' field.
   */
  public java.lang.Long getPlannedTime() {
    return planned_time;
  }

  /**
   * Sets the value of the 'planned_time' field.
   * @param value the value to set.
   */
  public void setPlannedTime(java.lang.Long value) {
    this.planned_time = value;
  }

  /**
   * Gets the value of the 'location_status' field.
   * @return The value of the 'location_status' field.
   */
  public java.lang.Integer getLocationStatus() {
    return location_status;
  }

  /**
   * Sets the value of the 'location_status' field.
   * @param value the value to set.
   */
  public void setLocationStatus(java.lang.Integer value) {
    this.location_status = value;
  }

  /**
   * Gets the value of the 'run_first_train_number' field.
   * @return The value of the 'run_first_train_number' field.
   */
  public java.lang.Integer getRunFirstTrainNumber() {
    return run_first_train_number;
  }

  /**
   * Sets the value of the 'run_first_train_number' field.
   * @param value the value to set.
   */
  public void setRunFirstTrainNumber(java.lang.Integer value) {
    this.run_first_train_number = value;
  }

  /**
   * Gets the value of the 'train_number' field.
   * @return The value of the 'train_number' field.
   */
  public java.lang.Integer getTrainNumber() {
    return train_number;
  }

  /**
   * Sets the value of the 'train_number' field.
   * @param value the value to set.
   */
  public void setTrainNumber(java.lang.Integer value) {
    this.train_number = value;
  }

  /**
   * Gets the value of the 'planned_departure_reference' field.
   * @return The value of the 'planned_departure_reference' field.
   */
  public java.lang.Long getPlannedDepartureReference() {
    return planned_departure_reference;
  }

  /**
   * Sets the value of the 'planned_departure_reference' field.
   * @param value the value to set.
   */
  public void setPlannedDepartureReference(java.lang.Long value) {
    this.planned_departure_reference = value;
  }

  /**
   * Gets the value of the 'planned_arrival_reference' field.
   * @return The value of the 'planned_arrival_reference' field.
   */
  public java.lang.Long getPlannedArrivalReference() {
    return planned_arrival_reference;
  }

  /**
   * Sets the value of the 'planned_arrival_reference' field.
   * @param value the value to set.
   */
  public void setPlannedArrivalReference(java.lang.Long value) {
    this.planned_arrival_reference = value;
  }

  /**
   * Gets the value of the 'train_operator_id' field.
   * @return The value of the 'train_operator_id' field.
   */
  public java.lang.Integer getTrainOperatorId() {
    return train_operator_id;
  }

  /**
   * Sets the value of the 'train_operator_id' field.
   * @param value the value to set.
   */
  public void setTrainOperatorId(java.lang.Integer value) {
    this.train_operator_id = value;
  }

  /**
   * Gets the value of the 'transfer_location_id' field.
   * @return The value of the 'transfer_location_id' field.
   */
  public java.lang.Integer getTransferLocationId() {
    return transfer_location_id;
  }

  /**
   * Sets the value of the 'transfer_location_id' field.
   * @param value the value to set.
   */
  public void setTransferLocationId(java.lang.Integer value) {
    this.transfer_location_id = value;
  }

  /**
   * Gets the value of the 'reporting_im_id' field.
   * @return The value of the 'reporting_im_id' field.
   */
  public java.lang.Integer getReportingImId() {
    return reporting_im_id;
  }

  /**
   * Sets the value of the 'reporting_im_id' field.
   * @param value the value to set.
   */
  public void setReportingImId(java.lang.Integer value) {
    this.reporting_im_id = value;
  }

  /**
   * Gets the value of the 'next_im_id' field.
   * @return The value of the 'next_im_id' field.
   */
  public java.lang.Integer getNextImId() {
    return next_im_id;
  }

  /**
   * Sets the value of the 'next_im_id' field.
   * @param value the value to set.
   */
  public void setNextImId(java.lang.Integer value) {
    this.next_im_id = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.Integer getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.Integer value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'message_creation' field.
   * @return The value of the 'message_creation' field.
   */
  public java.lang.Integer getMessageCreation() {
    return message_creation;
  }

  /**
   * Sets the value of the 'message_creation' field.
   * @param value the value to set.
   */
  public void setMessageCreation(java.lang.Integer value) {
    this.message_creation = value;
  }

  /**
   * Gets the value of the 'original_train_number' field.
   * @return The value of the 'original_train_number' field.
   */
  public java.lang.Integer getOriginalTrainNumber() {
    return original_train_number;
  }

  /**
   * Sets the value of the 'original_train_number' field.
   * @param value the value to set.
   */
  public void setOriginalTrainNumber(java.lang.Integer value) {
    this.original_train_number = value;
  }

  /**
   * Creates a new PlannedTrainData RecordBuilder.
   * @return A new PlannedTrainData RecordBuilder
   */
  public static org.bptlab.cepta.PlannedTrainData.Builder newBuilder() {
    return new org.bptlab.cepta.PlannedTrainData.Builder();
  }

  /**
   * Creates a new PlannedTrainData RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PlannedTrainData RecordBuilder
   */
  public static org.bptlab.cepta.PlannedTrainData.Builder newBuilder(org.bptlab.cepta.PlannedTrainData.Builder other) {
    return new org.bptlab.cepta.PlannedTrainData.Builder(other);
  }

  /**
   * Creates a new PlannedTrainData RecordBuilder by copying an existing PlannedTrainData instance.
   * @param other The existing instance to copy.
   * @return A new PlannedTrainData RecordBuilder
   */
  public static org.bptlab.cepta.PlannedTrainData.Builder newBuilder(org.bptlab.cepta.PlannedTrainData other) {
    return new org.bptlab.cepta.PlannedTrainData.Builder(other);
  }

  /**
   * RecordBuilder for PlannedTrainData instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PlannedTrainData>
    implements org.apache.avro.data.RecordBuilder<PlannedTrainData> {

    public int id;
    public int train_id;
    public int location_id;
    public long planned_time;
    public int location_status;
    public int run_first_train_number;
    public int train_number;
    public long planned_departure_reference;
    public long planned_arrival_reference;
    public int train_operator_id;
    public int transfer_location_id;
    public int reporting_im_id;
    public int next_im_id;
    public int status;
    public int message_creation;
    public int original_train_number;

    /** Creates a new Builder */
    public Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    public Builder(org.bptlab.cepta.PlannedTrainData.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.train_id)) {
        this.train_id = data().deepCopy(fields()[1].schema(), other.train_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.location_id)) {
        this.location_id = data().deepCopy(fields()[2].schema(), other.location_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.planned_time)) {
        this.planned_time = data().deepCopy(fields()[3].schema(), other.planned_time);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.location_status)) {
        this.location_status = data().deepCopy(fields()[4].schema(), other.location_status);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.run_first_train_number)) {
        this.run_first_train_number = data().deepCopy(fields()[5].schema(), other.run_first_train_number);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.train_number)) {
        this.train_number = data().deepCopy(fields()[6].schema(), other.train_number);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.planned_departure_reference)) {
        this.planned_departure_reference = data().deepCopy(fields()[7].schema(), other.planned_departure_reference);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.planned_arrival_reference)) {
        this.planned_arrival_reference = data().deepCopy(fields()[8].schema(), other.planned_arrival_reference);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.train_operator_id)) {
        this.train_operator_id = data().deepCopy(fields()[9].schema(), other.train_operator_id);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.transfer_location_id)) {
        this.transfer_location_id = data().deepCopy(fields()[10].schema(), other.transfer_location_id);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.reporting_im_id)) {
        this.reporting_im_id = data().deepCopy(fields()[11].schema(), other.reporting_im_id);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.next_im_id)) {
        this.next_im_id = data().deepCopy(fields()[12].schema(), other.next_im_id);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.status)) {
        this.status = data().deepCopy(fields()[13].schema(), other.status);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.message_creation)) {
        this.message_creation = data().deepCopy(fields()[14].schema(), other.message_creation);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.original_train_number)) {
        this.original_train_number = data().deepCopy(fields()[15].schema(), other.original_train_number);
        fieldSetFlags()[15] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing PlannedTrainData instance
     * @param other The existing instance to copy.
     */
    public Builder(org.bptlab.cepta.PlannedTrainData other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.train_id)) {
        this.train_id = data().deepCopy(fields()[1].schema(), other.train_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.location_id)) {
        this.location_id = data().deepCopy(fields()[2].schema(), other.location_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.planned_time)) {
        this.planned_time = data().deepCopy(fields()[3].schema(), other.planned_time);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.location_status)) {
        this.location_status = data().deepCopy(fields()[4].schema(), other.location_status);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.run_first_train_number)) {
        this.run_first_train_number = data().deepCopy(fields()[5].schema(), other.run_first_train_number);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.train_number)) {
        this.train_number = data().deepCopy(fields()[6].schema(), other.train_number);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.planned_departure_reference)) {
        this.planned_departure_reference = data().deepCopy(fields()[7].schema(), other.planned_departure_reference);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.planned_arrival_reference)) {
        this.planned_arrival_reference = data().deepCopy(fields()[8].schema(), other.planned_arrival_reference);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.train_operator_id)) {
        this.train_operator_id = data().deepCopy(fields()[9].schema(), other.train_operator_id);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.transfer_location_id)) {
        this.transfer_location_id = data().deepCopy(fields()[10].schema(), other.transfer_location_id);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.reporting_im_id)) {
        this.reporting_im_id = data().deepCopy(fields()[11].schema(), other.reporting_im_id);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.next_im_id)) {
        this.next_im_id = data().deepCopy(fields()[12].schema(), other.next_im_id);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.status)) {
        this.status = data().deepCopy(fields()[13].schema(), other.status);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.message_creation)) {
        this.message_creation = data().deepCopy(fields()[14].schema(), other.message_creation);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.original_train_number)) {
        this.original_train_number = data().deepCopy(fields()[15].schema(), other.original_train_number);
        fieldSetFlags()[15] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Integer getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder setId(int value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'train_id' field.
      * @return The value.
      */
    public java.lang.Integer getTrainId() {
      return train_id;
    }

    /**
      * Sets the value of the 'train_id' field.
      * @param value The value of 'train_id'.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder setTrainId(int value) {
      validate(fields()[1], value);
      this.train_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'train_id' field has been set.
      * @return True if the 'train_id' field has been set, false otherwise.
      */
    public boolean hasTrainId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'train_id' field.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder clearTrainId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'location_id' field.
      * @return The value.
      */
    public java.lang.Integer getLocationId() {
      return location_id;
    }

    /**
      * Sets the value of the 'location_id' field.
      * @param value The value of 'location_id'.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder setLocationId(int value) {
      validate(fields()[2], value);
      this.location_id = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'location_id' field has been set.
      * @return True if the 'location_id' field has been set, false otherwise.
      */
    public boolean hasLocationId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'location_id' field.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder clearLocationId() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'planned_time' field.
      * @return The value.
      */
    public java.lang.Long getPlannedTime() {
      return planned_time;
    }

    /**
      * Sets the value of the 'planned_time' field.
      * @param value The value of 'planned_time'.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder setPlannedTime(long value) {
      validate(fields()[3], value);
      this.planned_time = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'planned_time' field has been set.
      * @return True if the 'planned_time' field has been set, false otherwise.
      */
    public boolean hasPlannedTime() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'planned_time' field.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder clearPlannedTime() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'location_status' field.
      * @return The value.
      */
    public java.lang.Integer getLocationStatus() {
      return location_status;
    }

    /**
      * Sets the value of the 'location_status' field.
      * @param value The value of 'location_status'.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder setLocationStatus(int value) {
      validate(fields()[4], value);
      this.location_status = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'location_status' field has been set.
      * @return True if the 'location_status' field has been set, false otherwise.
      */
    public boolean hasLocationStatus() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'location_status' field.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder clearLocationStatus() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'run_first_train_number' field.
      * @return The value.
      */
    public java.lang.Integer getRunFirstTrainNumber() {
      return run_first_train_number;
    }

    /**
      * Sets the value of the 'run_first_train_number' field.
      * @param value The value of 'run_first_train_number'.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder setRunFirstTrainNumber(int value) {
      validate(fields()[5], value);
      this.run_first_train_number = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'run_first_train_number' field has been set.
      * @return True if the 'run_first_train_number' field has been set, false otherwise.
      */
    public boolean hasRunFirstTrainNumber() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'run_first_train_number' field.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder clearRunFirstTrainNumber() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'train_number' field.
      * @return The value.
      */
    public java.lang.Integer getTrainNumber() {
      return train_number;
    }

    /**
      * Sets the value of the 'train_number' field.
      * @param value The value of 'train_number'.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder setTrainNumber(int value) {
      validate(fields()[6], value);
      this.train_number = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'train_number' field has been set.
      * @return True if the 'train_number' field has been set, false otherwise.
      */
    public boolean hasTrainNumber() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'train_number' field.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder clearTrainNumber() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'planned_departure_reference' field.
      * @return The value.
      */
    public java.lang.Long getPlannedDepartureReference() {
      return planned_departure_reference;
    }

    /**
      * Sets the value of the 'planned_departure_reference' field.
      * @param value The value of 'planned_departure_reference'.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder setPlannedDepartureReference(long value) {
      validate(fields()[7], value);
      this.planned_departure_reference = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'planned_departure_reference' field has been set.
      * @return True if the 'planned_departure_reference' field has been set, false otherwise.
      */
    public boolean hasPlannedDepartureReference() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'planned_departure_reference' field.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder clearPlannedDepartureReference() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'planned_arrival_reference' field.
      * @return The value.
      */
    public java.lang.Long getPlannedArrivalReference() {
      return planned_arrival_reference;
    }

    /**
      * Sets the value of the 'planned_arrival_reference' field.
      * @param value The value of 'planned_arrival_reference'.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder setPlannedArrivalReference(long value) {
      validate(fields()[8], value);
      this.planned_arrival_reference = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'planned_arrival_reference' field has been set.
      * @return True if the 'planned_arrival_reference' field has been set, false otherwise.
      */
    public boolean hasPlannedArrivalReference() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'planned_arrival_reference' field.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder clearPlannedArrivalReference() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'train_operator_id' field.
      * @return The value.
      */
    public java.lang.Integer getTrainOperatorId() {
      return train_operator_id;
    }

    /**
      * Sets the value of the 'train_operator_id' field.
      * @param value The value of 'train_operator_id'.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder setTrainOperatorId(int value) {
      validate(fields()[9], value);
      this.train_operator_id = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'train_operator_id' field has been set.
      * @return True if the 'train_operator_id' field has been set, false otherwise.
      */
    public boolean hasTrainOperatorId() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'train_operator_id' field.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder clearTrainOperatorId() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'transfer_location_id' field.
      * @return The value.
      */
    public java.lang.Integer getTransferLocationId() {
      return transfer_location_id;
    }

    /**
      * Sets the value of the 'transfer_location_id' field.
      * @param value The value of 'transfer_location_id'.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder setTransferLocationId(int value) {
      validate(fields()[10], value);
      this.transfer_location_id = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'transfer_location_id' field has been set.
      * @return True if the 'transfer_location_id' field has been set, false otherwise.
      */
    public boolean hasTransferLocationId() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'transfer_location_id' field.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder clearTransferLocationId() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'reporting_im_id' field.
      * @return The value.
      */
    public java.lang.Integer getReportingImId() {
      return reporting_im_id;
    }

    /**
      * Sets the value of the 'reporting_im_id' field.
      * @param value The value of 'reporting_im_id'.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder setReportingImId(int value) {
      validate(fields()[11], value);
      this.reporting_im_id = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'reporting_im_id' field has been set.
      * @return True if the 'reporting_im_id' field has been set, false otherwise.
      */
    public boolean hasReportingImId() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'reporting_im_id' field.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder clearReportingImId() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'next_im_id' field.
      * @return The value.
      */
    public java.lang.Integer getNextImId() {
      return next_im_id;
    }

    /**
      * Sets the value of the 'next_im_id' field.
      * @param value The value of 'next_im_id'.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder setNextImId(int value) {
      validate(fields()[12], value);
      this.next_im_id = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'next_im_id' field has been set.
      * @return True if the 'next_im_id' field has been set, false otherwise.
      */
    public boolean hasNextImId() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'next_im_id' field.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder clearNextImId() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.Integer getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder setStatus(int value) {
      validate(fields()[13], value);
      this.status = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder clearStatus() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'message_creation' field.
      * @return The value.
      */
    public java.lang.Integer getMessageCreation() {
      return message_creation;
    }

    /**
      * Sets the value of the 'message_creation' field.
      * @param value The value of 'message_creation'.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder setMessageCreation(int value) {
      validate(fields()[14], value);
      this.message_creation = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'message_creation' field has been set.
      * @return True if the 'message_creation' field has been set, false otherwise.
      */
    public boolean hasMessageCreation() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'message_creation' field.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder clearMessageCreation() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'original_train_number' field.
      * @return The value.
      */
    public java.lang.Integer getOriginalTrainNumber() {
      return original_train_number;
    }

    /**
      * Sets the value of the 'original_train_number' field.
      * @param value The value of 'original_train_number'.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder setOriginalTrainNumber(int value) {
      validate(fields()[15], value);
      this.original_train_number = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'original_train_number' field has been set.
      * @return True if the 'original_train_number' field has been set, false otherwise.
      */
    public boolean hasOriginalTrainNumber() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'original_train_number' field.
      * @return This builder.
      */
    public org.bptlab.cepta.PlannedTrainData.Builder clearOriginalTrainNumber() {
      fieldSetFlags()[15] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PlannedTrainData build() {
      try {
        PlannedTrainData record = new PlannedTrainData();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Integer) defaultValue(fields()[0]);
        record.train_id = fieldSetFlags()[1] ? this.train_id : (java.lang.Integer) defaultValue(fields()[1]);
        record.location_id = fieldSetFlags()[2] ? this.location_id : (java.lang.Integer) defaultValue(fields()[2]);
        record.planned_time = fieldSetFlags()[3] ? this.planned_time : (java.lang.Long) defaultValue(fields()[3]);
        record.location_status = fieldSetFlags()[4] ? this.location_status : (java.lang.Integer) defaultValue(fields()[4]);
        record.run_first_train_number = fieldSetFlags()[5] ? this.run_first_train_number : (java.lang.Integer) defaultValue(fields()[5]);
        record.train_number = fieldSetFlags()[6] ? this.train_number : (java.lang.Integer) defaultValue(fields()[6]);
        record.planned_departure_reference = fieldSetFlags()[7] ? this.planned_departure_reference : (java.lang.Long) defaultValue(fields()[7]);
        record.planned_arrival_reference = fieldSetFlags()[8] ? this.planned_arrival_reference : (java.lang.Long) defaultValue(fields()[8]);
        record.train_operator_id = fieldSetFlags()[9] ? this.train_operator_id : (java.lang.Integer) defaultValue(fields()[9]);
        record.transfer_location_id = fieldSetFlags()[10] ? this.transfer_location_id : (java.lang.Integer) defaultValue(fields()[10]);
        record.reporting_im_id = fieldSetFlags()[11] ? this.reporting_im_id : (java.lang.Integer) defaultValue(fields()[11]);
        record.next_im_id = fieldSetFlags()[12] ? this.next_im_id : (java.lang.Integer) defaultValue(fields()[12]);
        record.status = fieldSetFlags()[13] ? this.status : (java.lang.Integer) defaultValue(fields()[13]);
        record.message_creation = fieldSetFlags()[14] ? this.message_creation : (java.lang.Integer) defaultValue(fields()[14]);
        record.original_train_number = fieldSetFlags()[15] ? this.original_train_number : (java.lang.Integer) defaultValue(fields()[15]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  public static final org.apache.avro.io.DatumWriter<PlannedTrainData>
    WRITER$ = (org.apache.avro.io.DatumWriter<PlannedTrainData>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  public static final org.apache.avro.io.DatumReader<PlannedTrainData>
    READER$ = (org.apache.avro.io.DatumReader<PlannedTrainData>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
